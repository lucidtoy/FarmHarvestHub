-- MySQL Script generated by MySQL Workbench
-- Tue Nov 28 09:27:09 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema FHH
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema FHH
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `FHH` DEFAULT CHARACTER SET utf8 ;
USE `FHH` ;

-- -----------------------------------------------------
-- Table `FHH`.`page_tbl`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FHH`.`page_tbl` ;

CREATE TABLE IF NOT EXISTS `FHH`.`page_tbl` (
  `page_id` INT NOT NULL AUTO_INCREMENT,
  `page_code` VARCHAR(45) NOT NULL,
  `page_title` VARCHAR(100) NULL,
  `url` VARCHAR(50) NOT NULL,
  `description` TEXT NULL,
  `defaults` ENUM('Y', 'N') NOT NULL DEFAULT 'N',
  `access_level` ENUM('PRIVATE', 'PUBLIC') NOT NULL DEFAULT 'PUBLIC',
  PRIMARY KEY (`page_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FHH`.`user_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FHH`.`user_type` ;

CREATE TABLE IF NOT EXISTS `FHH`.`user_type` (
  `user_type_id` INT NOT NULL AUTO_INCREMENT,
  `user_type` VARCHAR(45) NOT NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`user_type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FHH`.`resp_tbl`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FHH`.`resp_tbl` ;

CREATE TABLE IF NOT EXISTS `FHH`.`resp_tbl` (
  `resp_id` INT NOT NULL AUTO_INCREMENT,
  `page_id` INT NOT NULL,
  `user_type_id` INT NOT NULL,
  PRIMARY KEY (`resp_id`),
  INDEX `FK_PAGE_idx` (`page_id` ASC),
  INDEX `FK_USER_TYPE_idx` (`user_type_id` ASC),
  CONSTRAINT `FK_PAGE`
    FOREIGN KEY (`page_id`)
    REFERENCES `FHH`.`page_tbl` (`page_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_USER_TYPE`
    FOREIGN KEY (`user_type_id`)
    REFERENCES `FHH`.`user_type` (`user_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FHH`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FHH`.`users` ;

CREATE TABLE IF NOT EXISTS `FHH`.`users` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  `firstname` VARCHAR(45) NULL,
  `lastname` VARCHAR(45) NULL,
  `last_logon` DATETIME NOT NULL,
  `user_status` ENUM('ACTIVE', 'DISABLED') NOT NULL DEFAULT 'ACTIVE',
  `user_type_id` INT NOT NULL,
  `address` VARCHAR(45) NULL,
  `city` VARCHAR(45) NULL,
  `state` VARCHAR(45) NULL,
  PRIMARY KEY (`user_id`),
  INDEX `FK_USER_TYPE_ID_2_idx` (`user_type_id` ASC),
  CONSTRAINT `FK_USER_TYPE_ID_2`
    FOREIGN KEY (`user_type_id`)
    REFERENCES `FHH`.`user_type` (`user_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FHH`.`store`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FHH`.`store` ;

CREATE TABLE IF NOT EXISTS `FHH`.`store` (
  `store_id` INT NOT NULL AUTO_INCREMENT,
  `store_name` VARCHAR(45) NOT NULL,
  `address` TEXT NULL,
  `email` VARCHAR(100) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `admin_id` INT NOT NULL,
  `created_by` VARCHAR(45) NOT NULL,
  `created_at` DATETIME NOT NULL,
  PRIMARY KEY (`store_id`),
  INDEX `FK_ADMIN_ID_idx` (`admin_id` ASC),
  CONSTRAINT `FK_ADMIN_ID`
    FOREIGN KEY (`admin_id`)
    REFERENCES `FHH`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FHH`.`product_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FHH`.`product_category` ;

CREATE TABLE IF NOT EXISTS `FHH`.`product_category` (
  `category_id` INT NOT NULL AUTO_INCREMENT,
  `category_name` VARCHAR(45) NOT NULL,
  `description` TEXT NULL,
  PRIMARY KEY (`category_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FHH`.`product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FHH`.`product` ;

CREATE TABLE IF NOT EXISTS `FHH`.`product` (
  `product_id` INT NOT NULL AUTO_INCREMENT,
  `product_name` VARCHAR(45) NOT NULL,
  `product_description` TEXT NULL,
  `product_price` DECIMAL NULL,
  `category_id` INT NOT NULL,
  `store_id` INT NOT NULL,
  PRIMARY KEY (`product_id`),
  INDEX `FK_CAT_ID_idx` (`category_id` ASC),
  INDEX `FK_STORE_ID_idx` (`store_id` ASC),
  CONSTRAINT `FK_CAT_ID`
    FOREIGN KEY (`category_id`)
    REFERENCES `FHH`.`product_category` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_STORE_ID`
    FOREIGN KEY (`store_id`)
    REFERENCES `FHH`.`store` (`store_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FHH`.`inventory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FHH`.`inventory` ;

CREATE TABLE IF NOT EXISTS `FHH`.`inventory` (
  `inventory_id` INT NOT NULL AUTO_INCREMENT,
  `product_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`inventory_id`),
  INDEX `FK_PRODUCT_ID_idx` (`product_id` ASC),
  CONSTRAINT `FK_PRODUCT_ID`
    FOREIGN KEY (`product_id`)
    REFERENCES `FHH`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FHH`.`orders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FHH`.`orders` ;

CREATE TABLE IF NOT EXISTS `FHH`.`orders` (
  `order_id` INT NOT NULL AUTO_INCREMENT,
  `order_number` VARCHAR(45) NOT NULL,
  `total_amount` DECIMAL NOT NULL,
  `ordered_from` INT NOT NULL,
  `ordered_by` INT NOT NULL,
  `ordered_at` DATETIME NOT NULL,
  `order_status` ENUM('ORDERED', 'SHIPPED', 'DELIVERED') NOT NULL DEFAULT 'ORDERED',
  PRIMARY KEY (`order_id`),
  INDEX `FK_ORDERED_FROM_idx` (`ordered_from` ASC),
  INDEX `FK_ORDERED_BY_idx` (`ordered_by` ASC),
  CONSTRAINT `FK_ORDERED_FROM`
    FOREIGN KEY (`ordered_from`)
    REFERENCES `FHH`.`store` (`store_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_ORDERED_BY`
    FOREIGN KEY (`ordered_by`)
    REFERENCES `FHH`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FHH`.`order_details`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FHH`.`order_details` ;

CREATE TABLE IF NOT EXISTS `FHH`.`order_details` (
  `detail_id` INT NOT NULL AUTO_INCREMENT,
  `order_header_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  `price` DECIMAL NOT NULL,
  PRIMARY KEY (`detail_id`),
  INDEX `FK_ORDER_HEADER_idx` (`order_header_id` ASC),
  INDEX `FK_PROD_2_idx` (`product_id` ASC),
  CONSTRAINT `FK_ORDER_HEADER`
    FOREIGN KEY (`order_header_id`)
    REFERENCES `FHH`.`orders` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_PROD_2`
    FOREIGN KEY (`product_id`)
    REFERENCES `FHH`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FHH`.`inventory_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FHH`.`inventory_history` ;

CREATE TABLE IF NOT EXISTS `FHH`.`inventory_history` (
  `history_id` INT NOT NULL AUTO_INCREMENT,
  `product_id` INT NOT NULL,
  `quantity` INT NOT NULL,
  `added_by` INT NOT NULL,
  `added_at` DATETIME NOT NULL,
  PRIMARY KEY (`history_id`),
  INDEX `fk_prod_inv_idx` (`product_id` ASC),
  INDEX `fk_user_id_idx` (`added_by` ASC),
  CONSTRAINT `fk_prod_inv`
    FOREIGN KEY (`product_id`)
    REFERENCES `FHH`.`product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_id`
    FOREIGN KEY (`added_by`)
    REFERENCES `FHH`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `FHH`.`page_tbl`
-- -----------------------------------------------------
START TRANSACTION;
USE `FHH`;
INSERT INTO `FHH`.`page_tbl` (`page_id`, `page_code`, `page_title`, `url`, `description`, `defaults`, `access_level`) VALUES (1, 'HOME', 'Homepage', 'pages/home.php', 'Home page', 'Y', 'PUBLIC');
INSERT INTO `FHH`.`page_tbl` (`page_id`, `page_code`, `page_title`, `url`, `description`, `defaults`, `access_level`) VALUES (2, '404', '404 not found page', 'pages/404.php', '404 errorr not found page', 'N', 'PUBLIC');
INSERT INTO `FHH`.`page_tbl` (`page_id`, `page_code`, `page_title`, `url`, `description`, `defaults`, `access_level`) VALUES (3, 'ABOUT', 'About Us', 'pages/about.php', 'About us page', 'N', 'PUBLIC');
INSERT INTO `FHH`.`page_tbl` (`page_id`, `page_code`, `page_title`, `url`, `description`, `defaults`, `access_level`) VALUES (4, 'CONTACT', 'Contact us', 'pages/contact.php', 'Contact us page', 'N', 'PUBLIC');
INSERT INTO `FHH`.`page_tbl` (`page_id`, `page_code`, `page_title`, `url`, `description`, `defaults`, `access_level`) VALUES (5, 'STORE', 'Store Front', 'pages/store.php', 'Store Front', 'N', 'PUBLIC');
INSERT INTO `FHH`.`page_tbl` (`page_id`, `page_code`, `page_title`, `url`, `description`, `defaults`, `access_level`) VALUES (6, 'PRODUCT', 'Product Detail', 'pages/product.php', 'Product Detail', 'N', 'PUBLIC');
INSERT INTO `FHH`.`page_tbl` (`page_id`, `page_code`, `page_title`, `url`, `description`, `defaults`, `access_level`) VALUES (7, 'CART', 'Shopping cart', 'pages/cart.php', 'Shopping cart', 'N', 'PUBLIC');
INSERT INTO `FHH`.`page_tbl` (`page_id`, `page_code`, `page_title`, `url`, `description`, `defaults`, `access_level`) VALUES (8, 'ACCOUNT', 'Account', 'pages/account.php', 'Account page', 'N', 'PRIVATE');
INSERT INTO `FHH`.`page_tbl` (`page_id`, `page_code`, `page_title`, `url`, `description`, `defaults`, `access_level`) VALUES (9, 'CHECKOUT', 'Checkout Page', 'pages/checkout.php', 'Order checkout page', 'N', 'PRIVATE');
INSERT INTO `FHH`.`page_tbl` (`page_id`, `page_code`, `page_title`, `url`, `description`, `defaults`, `access_level`) VALUES (10, 'SEARCH', 'Search Page', 'pages/search.php', 'Search page', 'N', 'PUBLIC');

COMMIT;


-- -----------------------------------------------------
-- Data for table `FHH`.`user_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `FHH`;
INSERT INTO `FHH`.`user_type` (`user_type_id`, `user_type`, `description`) VALUES (1, 'ADMIN', 'Administrator');
INSERT INTO `FHH`.`user_type` (`user_type_id`, `user_type`, `description`) VALUES (2, 'Farmer', 'Farmer');
INSERT INTO `FHH`.`user_type` (`user_type_id`, `user_type`, `description`) VALUES (3, 'User', 'User');

COMMIT;

